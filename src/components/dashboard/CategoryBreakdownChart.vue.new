<![CDATA[<script setup>
import { computed, ref, onMounted, onUnmounted, watch } from "vue";
import { getCategoryBreakdown } from "@/api/auth";

const selectedPeriod = ref("month");
const periods = ref([
    { label: "Last Week", value: "week" },
    { label: "Last Month", value: "month" },
    { label: "Last Year", value: "year" },
]);

const chartData = ref({
    current: {
        labels: [],
        datasets: [{
            data: [],
            backgroundColor: ['#4F46E5', '#10B981', '#F59E0B'],
            borderWidth: 0
        }],
        percentages: []
    },
    trend: {
        labels: [],
        datasets: []
    },
    total: 0
});

async function loadCategoryData() {
    try {
        const response = await getCategoryBreakdown(selectedPeriod.value);
        chartData.value = response.data;
        console.log("✅ Category breakdown data loaded:", response.data);
    } catch (error) {
        console.error("❌ Failed to load category breakdown:", error);
    }
}

// Watch for period changes
watch(selectedPeriod, (newValue) => {
    loadCategoryData();
});

// Set up auto-refresh every minute
let refreshTimer = null;

onMounted(() => {
    loadCategoryData();
    refreshTimer = setInterval(loadCategoryData, 60000);
});

onUnmounted(() => {
    if (refreshTimer) {
        clearInterval(refreshTimer);
    }
});

const totalRevenue = computed(() => chartData.value.total);

const formattedTotal = computed(() => 
    totalRevenue.value.toLocaleString('en-PH', {
        style: 'currency',
        currency: 'PHP',
        minimumFractionDigits: 2
    })
);

// Computed property for the pie chart data
const pieChartData = computed(() => ({
    labels: chartData.value.current.labels,
    datasets: chartData.value.current.datasets
}));

// Computed property for the trend chart data
const trendChartData = computed(() => ({
    labels: chartData.value.trend.labels,
    datasets: chartData.value.trend.datasets
}));

const pieChartOptions = ref({
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
        legend: {
            position: "bottom",
            labels: {
                usePointStyle: true,
                padding: 20,
            },
        },
        tooltip: {
            callbacks: {
                label: (context) => {
                    const value = context.raw || 0;
                    const percentage = chartData.value.current.percentages[context.dataIndex];
                    return `${context.label}: ₱${value.toLocaleString()} (${percentage}%)`;
                },
            },
        },
    },
});

const trendChartOptions = ref({
    responsive: true,
    maintainAspectRatio: false,
    scales: {
        y: {
            beginAtZero: true,
            ticks: {
                callback: function(value) {
                    return '₱' + value.toLocaleString();
                }
            }
        }
    }
});
</script>

<template>
    <div>
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold">Revenue Breakdown by Category</h3>
            <div class="flex items-center gap-2">
                <Select
                    v-model="selectedPeriod"
                    :options="periods"
                    optionLabel="label"
                    optionValue="value"
                    class="w-40"
                />
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <!-- Pie Chart -->
            <div class="card p-4">
                <h4 class="text-base font-medium mb-4">Current Period</h4>
                <Chart
                    type="doughnut"
                    :data="pieChartData"
                    :options="pieChartOptions"
                    class="h-[300px]"
                />
                <div class="mt-4 text-center">
                    <div class="text-sm text-gray-600">Total Revenue</div>
                    <div class="text-xl font-semibold">{{ formattedTotal }}</div>
                </div>
            </div>

            <!-- Trend Chart -->
            <div class="card p-4">
                <h4 class="text-base font-medium mb-4">Revenue Trend</h4>
                <Chart
                    type="line"
                    :data="trendChartData"
                    :options="trendChartOptions"
                    class="h-[300px]"
                />
            </div>
        </div>

        <!-- Category Details -->
        <div class="mt-6 grid grid-cols-3 gap-4">
            <div v-for="(label, index) in chartData.value.current.labels" 
                 :key="label" 
                 class="card p-4 text-center">
                <div class="text-sm font-medium mb-2">{{ label }}</div>
                <div class="text-lg font-semibold" 
                     :style="{ color: chartData.value.current.datasets[0].backgroundColor[index] }">
                    ₱{{ chartData.value.current.datasets[0].data[index].toLocaleString() }}
                </div>
                <div class="text-sm text-gray-500">
                    ({{ chartData.value.current.percentages[index] }}%)
                </div>
            </div>
        </div>
    </div>
</template>]]>